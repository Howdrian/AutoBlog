---
import type { Image } from "@sanity/types";
import { urlFor } from "@/lib/sanity.ts";

interface Props {
	value: Image & { alt?: string };
}

const { value } = Astro.props;

let imageUrl = "";
let altText = "Blog image";

if (value?.asset) {
	try {
		imageUrl = urlFor(value).width(800).quality(80).url();
		altText = value.alt || "Blog image";
	} catch (error) {
		imageUrl = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='400' height='200'%3E%3Crect width='400' height='200' fill='%23f0f0f0'/%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' fill='%23999'%3EImage not available%3C/text%3E%3C/svg%3E";
		altText = "Image not available";
	}
} else {
	imageUrl = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='400' height='200'%3E%3Crect width='400' height='200' fill='%23f0f0f0'/%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' fill='%23999'%3ENo image data%3C/text%3E%3C/svg%3E";
	altText = "No image data";
}
---

<div class="my-6">
	<img 
		src={imageUrl} 
		alt={altText} 
		class="w-full h-auto rounded-lg shadow-md" 
		loading="lazy"
		decoding="async"
	/>
	{altText && altText !== "Blog image" && (
		<p class="mt-2 text-sm text-gray-600 text-center italic">{altText}</p>
	)}
</div>
